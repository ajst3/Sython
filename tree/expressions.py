# This file was generated by the expresion_generator tool.
# Holds all of the expression classes.

class Expression():
	def accept(self, visitor):
		pass

class Assign(Expression):
	def __init__(self, name, value):
		self.name = name
		self.value = value

	def accept(self, visitor):
		return visitor.visitAssign(self)

class Binary(Expression):
	def __init__(self, left, operator, right):
		self.left = left
		self.operator = operator
		self.right = right

	def accept(self, visitor):
		return visitor.visitBinary(self)

class Grouping(Expression):
	def __init__(self, expression):
		self.expression = expression

	def accept(self, visitor):
		return visitor.visitGrouping(self)

class Literal(Expression):
	def __init__(self, val):
		self.val = val

	def accept(self, visitor):
		return visitor.visitLiteral(self)

class Unary(Expression):
	def __init__(self, operator, right):
		self.operator = operator
		self.right = right

	def accept(self, visitor):
		return visitor.visitUnary(self)

class Variable(Expression):
	def __init__(self, name):
		self.name = name

	def accept(self, visitor):
		return visitor.visitVariable(self)
